" Example Vim configuration.
" Copy or symlink to ~/.vimrc or ~/_vimrc.

set nocompatible                  " Must come first because it changes other options.

call pathogen#infect()
Helptags

syntax enable                     " Turn on syntax highlighting.

set background=dark
colorscheme solarized

filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

set t_Co=256

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

"indent settings
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent

set linespace=4

"vertical/horizontal scroll off settings
set scrolloff=3
set sidescrolloff=7
set sidescroll=1

set laststatus=2

"mapping for command key to map navigation thru display lines instead
"of just numbered lines
vmap <D-j> gj
vmap <D-k> gk
vmap <D-4> g$
vmap <D-6> g^
vmap <D-0> g^
nmap <D-j> gj
nmap <D-k> gk
nmap <D-4> g$
nmap <D-6> g^
nmap <D-0> g^

nnoremap <F5> :buffers<CR>:buffer<Space>
nnoremap <F4> :Kwbd<CR>

nnoremap <silent> <F8> mmgg=G'm^

"key mapping for saving file
nmap <C-s> :w<CR>

"Key mapping for textmate-like indentation
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv

let mapleader = ','

" NERDTree setup
" Toggle NERDTree mappings
map <C-n> :NERDTreeToggle<CR>

" Open NERDTree if vim starts up with no files
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Close vim if only window open is NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

let ScreenShot = {'Icon':0, 'Credits':0, 'force_background':'#FFFFFF'}

" Uncomment to use Jamis Buck's file opening plugin
"map <Leader>t :FuzzyFinderTextMate<Enter>

" Controversial...swap colon and semicolon for easier commands
"nnoremap ; :
"nnoremap : ;

"vnoremap ; :
"vnoremap : ;

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

"Enabling Zencoding
let g:user_zen_settings = {
      \  'php' : {
      \    'extends' : 'html',
      \    'filters' : 'c',
      \  },
      \  'xml' : {
      \    'extends' : 'html',
      \  },
      \  'haml' : {
      \    'extends' : 'html',
      \  },
      \  'erb' : {
      \    'extends' : 'html',
      \  },
      \}

function! CleverTab()
  if pumvisible()
    return "\<C-N>"
  endif
  if strpart( getline('.'), 0, col('.')-1 ) =~ '^\s*$'
    return "\<Tab>"
  else
    return "\<C-N>"
  endif
endfunction

function! OmniComplete()
  if exists('&omnifunc') && &omnifunc != ''
    return "\<C-X>\<C-O>"
  endif
endfunction

inoremap jk <Esc>
inoremap <Nul> <C-R>=CleverTab()<CR>
inoremap <C-A> <C-R>=OmniComplete()<CR>

nnoremap <silent> ,/ :noh<cr>

" html indentation
let g:html_indent_inctags = "html,body,head,tbody"

let g:airline_enable_fugitive=1
let g:airline_powerline_fonts=1

let g:ctrlp_map = '<c-f>'
let g:ctrlp_root_markers = ['.ctrlp']

let g:mustache_abbreviations = 1

set exrc
